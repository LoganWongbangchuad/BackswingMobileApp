@page "/CreateAccount"

@using System.ComponentModel.DataAnnotations

<EditForm Model="@accountModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="text-center">
        <img class="mb-4" src="Resources/Images/backswinglogo.png" alt="Backswing Logo" width="72" height="72">
        <h1 class="h3 mb-3 font-weight-normal">Create Your Account</h1>

        <div class="form-group">
            <label for="inputEmail">Email address</label>
            <InputText id="inputEmail" class="form-control" @bind-Value="accountModel.Email" placeholder="Email address" />
            <ValidationMessage For="@(() => accountModel.Email)" />
        </div>

        <div class="form-group">
            <label for="inputUsername">Username</label>
            <InputText id="inputUsername" class="form-control" @bind-Value="accountModel.Username" placeholder="Username" />
            <ValidationMessage For="@(() => accountModel.Username)" />
        </div>

        <div class="form-group">
            <label for="inputPassword">Password</label>
            <InputText id="inputPassword" type="password" class="form-control" @bind-Value="accountModel.Password" placeholder="Password" />
            <ValidationMessage For="@(() => accountModel.Password)" />
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="accountModel.ConfirmPassword" placeholder="Confirm Password" />
            <ValidationMessage For="@(() => accountModel.ConfirmPassword)" />
        </div>

        <button type="submit" class="btn btn-lg btn-primary btn-block" href="/Login">Create your account</button>
    </div>
</EditForm>

@code {
    private AccountModel accountModel = new AccountModel();

    private void HandleValidSubmit()
    {
        // Handle the form submission, e.g., send data to the server
        Console.WriteLine("Account created successfully!");
    }

    public class AccountModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        public string Username { get; set; }

        [Required]
        [MinLength(6)]
        public string Password { get; set; }

        [Required]
        [Compare("Password", ErrorMessage = "Passwords do not match.")]
        public string ConfirmPassword { get; set; }
    }
}
